# All local jobs are part of the vanilla universe.
Universe        = vanilla

# We want email if the job completed successfully. This can
# be set to Always, Error, or Never.
Notification    = Never

# The executable we want to run.
Executable   =  /phenix/u/vassalli/sphenix/single/condor/CondorTrain.csh

 # The argument to pass to the executable.
Arguments       = $(Process)

# The requirement line specifies which machines we want to
# run this job on.  Any arbitrary classad expression can
# be used.
Requirements = (CPU_Speed >= 1)

# Rank is an expression that states how to rank machines which 
# have already met the requirements expression.  Essentially, 
# rank expresses preference.  A higher numeric value equals better 
# rank.  Condor will give the job the machine with the highest rank.
Rank		= CPU_Speed

# Jobs with higher numerical priority will run before jobs 
# with lower numerical priority (-20 to 20).
Priority        = +18

# Used to give jobs a directory with respect to file input 
# and output.
Initialdir   = /phenix/u/vassalli/sphenix/single/Training/

# Input file given to the job.
Input           = /dev/null

# The job's stdout is sent to this file.
Output       = /direct/phenix+u/vassalli/sphenix/single/condor_logs/out.t.$(Process)

# The job's stderr is sent to this file.
Error        = /direct/phenix+u/vassalli/sphenix/single/condor_logs/err.t.$(Process)

# The condor log file for this job, useful when debuggin
Log          = /direct/phenix+u/vassalli/sphenix/single/condor_logs/log.t.$(Process)

# Email address to send notification to.
Notify_user     = frva5829@colorado.edu


request_memory = 1680M
# This should be the last command and tells condor to queue the
# job.  If a number is placed after the command (i.e. Queue 15)
# then the job will be submitted N times.  Use the $(Process)
# macro to make your input/output and log files unique.
Queue 1
